services:
  app:
    container_name: app
    build:
      context: .
      dockerfile: Dockerfile
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    command: python manage.py runserver_plus 0.0.0.0:8000
    stdin_open: true
    tty: true
    ports:
      - 8000:8000
    env_file:
      - .env
    restart: on-failure
    stop_grace_period: 3s
    volumes:
      - ${PWD}/src:/app/src
      - ${PWD}/bin:/app/bin
      - ${PWD}/requirements:/app/requirements
      - home:/home/yodaspeak # Location of Python dependencies and locally installed binaries

  postgres:
    image: postgres:17-alpine
    container_name: postgres
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}    
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER}"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: on-failure
    stop_grace_period: 3s
    volumes:
      - postgres:/var/lib/postgresql/data

  redis:
    image: redis:7-alpine
    container_name: redis
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: on-failure
    stop_grace_period: 3s
    volumes:
      - redis:/redis

volumes:
  home: {}
  postgres: {}
  redis: {}
